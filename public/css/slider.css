.slider {
  position: relative;
}

.slider-viewport {
  position: relative;
  overflow: hidden;
}

.slider-track {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.slider.no-slide .slider-track {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-flex: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  -ms-flex-negative: 0;
      flex-shrink: 0;
  overflow: hidden;
  max-width: 100%;
  -ms-flex-preferred-size: auto;
      flex-basis: auto;
  height: auto;
}

.slide img {
  display: block;
  border: none;
  max-height: 200px;
}

.slide a {
  display: block;
  position: relative;
}

.slide a:hover::before {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1;
  background: rgba(0, 0, 0, 0.4);
}

.slider-prev,
.slider-next {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 100;
  width: 30px;
  background: rgba(0, 0, 0, 0.3);
  font-size: 30px;
  color: #ffffff;
  text-decoration: none;
  -webkit-transition: width 400ms ease 600ms, background 400ms, color 400ms;
  transition: width 400ms ease 600ms, background 400ms, color 400ms;
  overflow: hidden;
}

.slider-prev:hover,
.slider-next:hover {
  background: rgba(0, 0, 0, 0.6);
  color: #ffdd8a;
  text-decoration: none;
}

.slider-prev {
  left: 0;
}

.slider-next {
  right: 0;
}

.slider-start .slider-prev {
  background: rgba(0, 0, 0, 0.3);
  color: #7e7e7e;
  width: 0;
}

.slider-end .slider-next {
  background: rgba(0, 0, 0, 0.3);
  color: #7e7e7e;
  width: 0;
}

.slider.no-slide .slider-prev,
.slider.no-slide .slider-next {
  display: none;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */